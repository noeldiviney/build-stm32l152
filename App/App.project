<?xml version="1.0" encoding="UTF-8"?>
<CodeLite_Project Name="App" InternalType="Embedded App STMicro L1">
  <Plugins>
    <Plugin Name="qmake">
      <![CDATA[00010001N0005Debug000000000000]]>
    </Plugin>
    <Plugin Name="CMakePlugin">
      <![CDATA[[{
  "name": "Debug",
  "enabled": false,
  "buildDirectory": "build",
  "sourceDirectory": "$(ProjectPath)",
  "generator": "",
  "buildType": "",
  "arguments": [],
  "parentProject": ""
 }]]]>
    </Plugin>
  </Plugins>
  <Description/>
  <Dependencies/>
  <VirtualDirectory Name="inc">
    <File Name="../../Inc/FreeRTOSConfig.h"/>
    <File Name="../../Inc/mxconstants.h"/>
    <File Name="../../Inc/stm32l1xx_hal_conf.h"/>
    <File Name="../../Inc/stm32l1xx_it.h"/>
  </VirtualDirectory>
  <VirtualDirectory Name="src">
    <File Name="../../Src/freertos.c"/>
    <File Name="../../Src/main.c"/>
    <File Name="../../Src/stm32l1xx_hal_msp.c"/>
    <File Name="../../Src/stm32l1xx_hal_timebase_TIM.c"/>
    <File Name="../../Src/stm32l1xx_it.c"/>
  </VirtualDirectory>
  <VirtualDirectory Name="zMiscFiles">
    <File Name="./Projects/openocd/gdb_vsllink_jtag.cfg"/>
    <File Name="./Projects/openocd/gdb_vsllink_swd.cfg"/>
    <File Name="./Projects/openocd/program_vsllink_jtag.cfg"/>
    <File Name="./Projects/openocd/program_vsllink_swd.cfg"/>
    <File Name="./linker.ld"/>
    <File Name="../stm32_flash.ld"/>
  </VirtualDirectory>
  <Dependencies Name="Debug">
    <Project Name="libStm32HAL"/>
    <Project Name="libFreeRTOS"/>
  </Dependencies>
  <Settings Type="Executable">
    <GlobalSettings>
      <Compiler Options="" C_Options="" Assembler="">
        <IncludePath Value="."/>
      </Compiler>
      <Linker Options="">
        <LibraryPath Value="."/>
      </Linker>
      <ResourceCompiler Options=""/>
    </GlobalSettings>
    <Configuration Name="Debug" CompilerType="Launch Pad ( arm-none-eabi )" DebuggerType="GNU gdb debugger" Type="Executable" BuildCmpWithGlobalSettings="append" BuildLnkWithGlobalSettings="append" BuildResWithGlobalSettings="append">
      <Compiler Options="-g;-Os;-Wall;-mcpu=cortex-m3;-mthumb;-mfloat-abi=soft;-ffunction-sections;-fdata-sections;-fsigned-char;-mlittle-endian" C_Options="-g;-Os;-Wall;-mcpu=cortex-m3;-mthumb;-mfloat-abi=soft;-ffunction-sections;-fdata-sections;-fsigned-char;-mlittle-endian" Assembler="" Required="yes" PreCompiledHeader="" PCHInCommandLine="no" PCHFlags="" PCHFlagsPolicy="0">
        <IncludePath Value="."/>
        <IncludePath Value="../../Inc"/>
        <IncludePath Value="../../Drivers/CMSIS/Include"/>
        <IncludePath Value="../../Drivers/CMSIS/Device/ST/STM32L1xx/Include"/>
        <IncludePath Value="../../Drivers/STM32L1xx_HAL_Driver/Inc"/>
        <IncludePath Value="../../Drivers/STM32L1xx_HAL_Driver/Inc/Legacy"/>
        <IncludePath Value="../../Middlewares/Third_Party/FreeRTOS/Source/CMSIS_RTOS"/>
        <IncludePath Value="../../Middlewares/Third_Party/FreeRTOS/Source/include"/>
        <IncludePath Value="../../Middlewares/Third_Party/FreeRTOS/Source/portable/GCC/ARM_CM3"/>
        <Preprocessor Value="__weak=&quot;__attribute__((weak))&quot;"/>
        <Preprocessor Value="__packed=&quot;__attribute__((__packed__))&quot;"/>
        <Preprocessor Value="USE_HAL_DRIVER"/>
        <Preprocessor Value="STM32L152xE"/>
      </Compiler>
      <Linker Options="-O3;-g;-mcpu=cortex-m3;-specs=nosys.specs;-specs=nano.specs;-mthumb;-static;-Wl,-cref,-u,Reset_Handler;-Wl,-Map=./$(IntermediateDirectory)/$(ProjectName).map;-Wl,--gc-sections;-lm;-T../../SW4STM32/Stm32L1_Nucleo_FreeRTOS/STM32L152RETx_FLASH.ld" Required="yes">
        <LibraryPath Value="../../lib"/>
        <Library Value="libStm32HALd.a"/>
        <Library Value="libFreeRTOSd.a"/>
      </Linker>
      <ResourceCompiler Options="" Required="no"/>
      <General OutputFile="$(IntermediateDirectory)/$(ProjectName).elf" IntermediateDirectory="./Debug" Command="./$(ProjectName)" CommandArguments="" UseSeparateDebugArgs="no" DebugArguments="" WorkingDirectory="$(IntermediateDirectory)" PauseExecWhenProcTerminates="yes" IsGUIProgram="no" IsEnabled="yes"/>
      <Environment EnvVarSetName="&lt;Use Defaults&gt;" DbgSetName="&lt;Use Defaults&gt;">
        <![CDATA[]]>
      </Environment>
      <Debugger IsRemote="yes" RemoteHostName="localhost" RemoteHostPort="3333" DebuggerPath="arm-none-eabi-gdb.exe" IsExtended="no">
        <DebuggerSearchPaths/>
        <PostConnectCommands/>
        <StartupCommands/>
      </Debugger>
      <PreBuild/>
      <PostBuild>
        <Command Enabled="yes">arm-none-eabi-objcopy -O ihex $(IntermediateDirectory)/$(ProjectName).elf $(IntermediateDirectory)/$(ProjectName).hex</Command>
        <Command Enabled="yes">arm-none-eabi-objcopy -O ihex $(IntermediateDirectory)/$(ProjectName).elf $(IntermediateDirectory)/$(ProjectName).bin</Command>
        <Command Enabled="yes">size -A $(IntermediateDirectory)/$(ProjectName).elf</Command>
      </PostBuild>
      <CustomBuild Enabled="no">
        <RebuildCommand/>
        <CleanCommand/>
        <BuildCommand/>
        <PreprocessFileCommand/>
        <SingleFileCommand/>
        <MakefileGenerationCommand/>
        <ThirdPartyToolName>None</ThirdPartyToolName>
        <WorkingDirectory/>
      </CustomBuild>
      <AdditionalRules>
        <CustomPostBuild/>
        <CustomPreBuild/>
      </AdditionalRules>
      <Completion EnableCpp11="no" EnableCpp14="no">
        <ClangCmpFlagsC/>
        <ClangCmpFlags/>
        <ClangPP/>
        <SearchPaths/>
      </Completion>
    </Configuration>
    <Configuration Name="Release" CompilerType="FreddieChopin (arm-none-eabi)" DebuggerType="GNU gdb debugger" Type="Executable" BuildCmpWithGlobalSettings="append" BuildLnkWithGlobalSettings="append" BuildResWithGlobalSettings="append">
      <Compiler Options="-Os;-Wall;-mcpu=cortex-m3;-mthumb;-ffunction-sections;-fdata-sections;-fsigned-char;-mlittle-endian" C_Options="-Os;-Wall;-mcpu=cortex-m3;-mthumb;-ffunction-sections;-fdata-sections;-fsigned-char;-mlittle-endian" Assembler="" Required="yes" PreCompiledHeader="" PCHInCommandLine="no" PCHFlags="" PCHFlagsPolicy="0">
        <IncludePath Value="."/>
        <IncludePath Value="../../app/inc"/>
        <IncludePath Value="../../lib/libStm32HAL/CMSIS_Device/inc"/>
        <IncludePath Value="../../lib/libStm32HAL/CMSIS_Core/inc"/>
        <IncludePath Value="../../lib/libStm32HAL/HAL_Driver/inc"/>
        <IncludePath Value="../../lib/libFreeRTOS/CMSIS_RTOS/inc"/>
        <IncludePath Value="../../lib/libFreeRTOS/Kernel/inc"/>
        <IncludePath Value="../../lib/libFreeRTOS/Portable/inc"/>
        <IncludePath Value="../../Projects/ProjectName/src"/>
        <Preprocessor Value="__weak=&quot;__attribute__((weak))&quot;"/>
        <Preprocessor Value="__packed=&quot;__attribute__((__packed__))&quot;"/>
        <Preprocessor Value="USE_HAL_DRIVER"/>
        <Preprocessor Value="STM32L162xE"/>
      </Compiler>
      <Linker Options="-O3;-mcpu=cortex-m3;-nostartfiles;-mthumb;-static;-Wl,-cref,-u,Reset_Handler;-Wl,-Map=./$(IntermediateDirectory)/$(ProjectName).map;-Wl,--gc-sections;-Wl,defsym=malloc_getpagesize_P=0x1000;-T../stm32_flash.ld" Required="yes">
        <LibraryPath Value="../../lib"/>
        <Library Value="libStm32HALd.a"/>
        <Library Value="libFreeRTOSd.a"/>
      </Linker>
      <ResourceCompiler Options="" Required="no"/>
      <General OutputFile="$(IntermediateDirectory)/$(ProjectName).elf" IntermediateDirectory="./Release" Command="./$(ProjectName)" CommandArguments="" UseSeparateDebugArgs="no" DebugArguments="" WorkingDirectory="$(IntermediateDirectory)" PauseExecWhenProcTerminates="yes" IsGUIProgram="no" IsEnabled="yes"/>
      <Environment EnvVarSetName="&lt;Use Defaults&gt;" DbgSetName="&lt;Use Defaults&gt;">
        <![CDATA[]]>
      </Environment>
      <Debugger IsRemote="yes" RemoteHostName="localhost" RemoteHostPort="3333" DebuggerPath="arm-none-eabi-gdb.exe" IsExtended="no">
        <DebuggerSearchPaths/>
        <PostConnectCommands/>
        <StartupCommands/>
      </Debugger>
      <PreBuild/>
      <PostBuild>
        <Command Enabled="yes">arm-none-eabi-objcopy -O ihex $(IntermediateDirectory)/$(ProjectName).elf $(IntermediateDirectory)/$(ProjectName).hex</Command>
        <Command Enabled="yes">arm-none-eabi-objcopy -O ihex $(IntermediateDirectory)/$(ProjectName).elf $(IntermediateDirectory)/$(ProjectName).bin</Command>
        <Command Enabled="yes">size -A $(IntermediateDirectory)/$(ProjectName).elf</Command>
      </PostBuild>
      <CustomBuild Enabled="no">
        <RebuildCommand/>
        <CleanCommand/>
        <BuildCommand/>
        <PreprocessFileCommand/>
        <SingleFileCommand/>
        <MakefileGenerationCommand/>
        <ThirdPartyToolName>None</ThirdPartyToolName>
        <WorkingDirectory/>
      </CustomBuild>
      <AdditionalRules>
        <CustomPostBuild/>
        <CustomPreBuild/>
      </AdditionalRules>
      <Completion EnableCpp11="no" EnableCpp14="no">
        <ClangCmpFlagsC/>
        <ClangCmpFlags/>
        <ClangPP/>
        <SearchPaths/>
      </Completion>
    </Configuration>
  </Settings>
</CodeLite_Project>
